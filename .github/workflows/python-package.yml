# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  lint:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/all.txt
          pip install -e .
      - name: Lint
        run: |
          ./bin/lint-check.sh || (echo "Lint fix results:" && ./bin/lint-fix.sh && git diff && false)
          bin/update-glean-documentation.sh
          if [[   $(git diff docs/glean | head -c1 | wc -c) -ne 0 ]]; then echo "Unexpected glean changes! Please regenerate glean documentation via `./bin/update-glean-documentation.sh`." && false; fi

  build-and-test-linux-base:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-18.04
        python-version: [3.7]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/all.txt
          pip install -e .
      - name: Build
        run: |
          python gui/build.py bundle
          ls -alh gui/mozregression-gui.tar.gz || true
          ls -alh gui/dist/mozregression-gui.dmg || true
      - name: Test
        run: |
          pytest -v tests
          #coverage run -m pytest tests && mv .coverage .coverage.core
          #coverage run gui/build.py test && mv .coverage .coverage.gui
          #coverage combine
          #pip install coveralls; coveralls

  build-and-test-linux-gui:
    runs-on: ubuntu-18.04
    env:
      DISPLAY: ":99.0"
    steps:
      - uses: actions/checkout@v2
      - name: setup
        run: |
          sudo apt install libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0
          /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1920x1200x24 -ac +extension GLX
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/all.txt
          pip install -e .
      - name: Build
        run: |
          python gui/build.py bundle
          ls -alh gui/mozregression-gui.tar.gz
      - name: Test
        run: |
          pytest -v gui/tests
          #coverage run -m pytest tests && mv .coverage .coverage.core
          #coverage run gui/build.py test && mv .coverage .coverage.gui
          #coverage combine
          #pip install coveralls; coveralls

  build-and-test-mac-gui:
    runs-on: macos-latest
    env:
      # We need the official Python, because the GA ones only support newer macOS versions
      # The deployment target is picked up by the Python build tools automatically
      PYTHON_VERSION: 3.9.1
      MACOSX_DEPLOYMENT_TARGET: 10.9
    steps:
      - uses: actions/checkout@v2
      - name: Get Python
        run: curl https://www.python.org/ftp/python/${PYTHON_VERSION}/python-${PYTHON_VERSION}-macosx10.9.pkg -o "python.pkg"
      - name: Install Python
        # Need to copy the pkg because the installer command removes it, breaking the cache
        run: |
          sudo installer -pkg python.pkg -target /
          echo "/Library/Frameworks/Python.framework/Versions/3.9/bin" >> $GITHUB_PATH
          which python3
          python3 --version
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -r requirements/all.txt
          pip3 install -e .
      - name: Build
        run: |
          python3 gui/build.py bundle
          ls -alh gui/dist/mozregression-gui.dmg
      - name: Test
        run: |
          pytest -v gui/tests
          #coverage run -m pytest tests && mv .coverage .coverage.core
          #coverage run gui/build.py test && mv .coverage .coverage.gui
          #coverage combine
          #pip install coveralls; coveralls
